name: .NET CI/CD Pipeline

on:
  push:
    branches: 
      - main
      - QA
      - DEV

permissions:
  contents: write
  issues: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal

  create-and-publish-container:
    needs: build-and-test
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Bump version and push tag
        id: bump_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          default_bump: patch
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Diaspora.Api/Dockerfile  # Ajusta la ruta al Dockerfile correcto
          push: true
          tags: ombenavidez/tfm:${{ steps.bump_version.outputs.new_tag }}

  deploy-dev:
    needs: create-and-publish-container
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/DEV'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set IMAGE_TAG environment variable
        run: echo "IMAGE_TAG=${{ needs.create-and-publish-container.outputs.new_version }}" >> $GITHUB_ENV
      - name: Print IMAGE_TAG
        run: echo "Using IMAGE TAG ${{ env.IMAGE_TAG }}"
      - name: Deploy to Azure Web App (DEV)
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'diaspora-dev'  # Reemplaza con el nombre de tu App Service
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_DEV }}
          images: 'ombenavidez/tfm:${{ env.IMAGE_TAG }}'

  deploy-qa:
    needs: create-and-publish-container
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/QA'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set IMAGE_TAG environment variable
        run: echo "IMAGE_TAG=${{ needs.create-and-publish-container.outputs.new_version }}" >> $GITHUB_ENV
      - name: Print IMAGE_TAG
        run: echo "Using IMAGE TAG ${{ env.IMAGE_TAG }}"
      - name: Deploy to Azure Web App (QA)
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'diaspora-qa'  # Reemplaza con el nombre de tu App Service
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_QA }}
          images: 'ombenavidez/tfm:${{ env.IMAGE_TAG }}'

  deploy-prod:
    needs: create-and-publish-container
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set IMAGE_TAG environment variable
        run: echo "IMAGE_TAG=${{ needs.create-and-publish-container.outputs.new_version }}" >> $GITHUB_ENV
      - name: Print IMAGE_TAG
        run: echo "Using IMAGE TAG ${{ env.IMAGE_TAG }}"
      - name: Deploy to Azure Web App (Production)
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'diaspora'  # Reemplaza con el nombre de tu App Service
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_PROD }}
          images: 'ombenavidez/tfm:${{ env.IMAGE_TAG }}'
